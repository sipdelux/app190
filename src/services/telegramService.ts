import { showErrorNotification } from '../utils/notifications';

const TELEGRAM_BOT_TOKEN = '8147365010:AAFfUqOsbFjLAOYHqCJWl7D7xDxotTlMYd4';
const TELEGRAM_CHAT_ID = '-4632290947'; // Replace with your actual chat ID

export const sendTelegramNotification = async (message: string) => {
  try {
    if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {
      console.warn('Telegram configuration missing');
      return false;
    }

    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: message,
        parse_mode: 'HTML',
        disable_web_page_preview: false
      })
    });

    const data = await response.json();

    if (!response.ok) {
      console.warn('Failed to send Telegram notification:', data.description);
      return false;
    }

    return true;
  } catch (error) {
    console.error('Error sending Telegram notification:', error);
    return false;
  }
};

export const formatTransactionMessage = (
  fromUser: string,
  toUser: string,
  amount: number,
  description: string,
  type: 'income' | 'expense',
  waybillNumber?: string
): string => {
  const formattedAmount = Math.round(amount).toLocaleString('ru-RU');

  // –ï—Å–ª–∏ —ç—Ç–æ —Å–∫–ª–∞–¥—Å–∫–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è (–µ—Å—Ç—å –Ω–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ–π)
  if (waybillNumber) {
    const emoji = type === 'income' ? 'üì•' : 'üì§';
    const waybillLink = `https://t.me/HotWellBot/waybill/${waybillNumber}`;
    return `
${emoji} <b>–°–∫–ª–∞–¥—Å–∫–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è</b>

<b>–û—Ç:</b> ${fromUser}
<b>–ö–æ–º—É:</b> ${toUser}
<b>–°—É–º–º–∞:</b> ${formattedAmount} ‚Ç∏
<b>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</b> ${description}
<b>–ù–∞–∫–ª–∞–¥–Ω–∞—è:</b> <a href="${waybillLink}">‚Ññ${waybillNumber}</a>
    `.trim();
  }

  // –î–ª—è –æ–±—ã—á–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–æ—Ä–º–∞—Ç –∫–∞–∫ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ
  return `üî¥ –†–∞—Å—á–µ—Ç –ø–æ –ß–µ–∫–∞–º HotWell.KZ

–û—Ç: ${fromUser}
–ö–æ–º—É: ${toUser}
–°—É–º–º–∞: ${formattedAmount} ‚Ç∏
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: ${description}`.trim();
};